description: "Drive the GEM vehicle along a fixed route (currently xyhead_highbay_backlot_p.csv)"
mode: hardware
vehicle_interface: gem_hardware.GEMHardwareInterface
mission_execution: StandardExecutor
# require_engaged: False
# Recovery behavior after a component failure
recovery: 
    planning: 
        trajectory_tracking:
            type: recovery.StopTrajectoryTracker
            print: False
# Driving behavior for the GEM vehicle following a fixed route
drive: # Full pipeline on board
    perception:
        state_estimation : GNSSStateEstimator
        agent_detection : 
            type: cone_detection.ConeDetector3D
            args:
                camera_name: front_right #[front, front_right]
                camera_calib_file: ./GEMstack/knowledge/calibration/cameras.yaml

                # optional overrides
                enable_tracking: False
                visualize_2d: False
                use_cyl_roi: False
                save_data: False
                orientation: False
                use_start_frame: False
        # agent_detection : cone_detection_simple.ConeDetectorSimple3D
        parking_detection: parking_detection.ParkingSpotsDetector3D
        perception_normalization : StandardPerceptionNormalizer
    planning:
        parking_component:
            type: ParkingSim
    #     route_planning_component:
    #         type: RoutePlanningComponent
    # trajectory_tracking:
    #         type: pure_pursuit.PurePursuitTrajectoryTracker
    #         print: False
#usually can keep this constant
computation_graph: !include "../GEMstack/knowledge/defaults/computation_graph.yaml"

after:
    show_log_folder: True  #set to false to avoid showing the log folder

#on load, variants will overload the settingsNone structure
variants:
    #sim variant doesn't execute on the real vehicle 
    #real variant executes on the real robot
    detector_only:
        run:
            description: "Run the parking spot detection code"
        drive:
            planning:
                trajectory_tracking:
    test: # perception only
        run:
            mode: simulation
            vehicle_interface:
                type: gem_simulator.GEMDoubleIntegratorSimulationInterface
                args:
                    scene: !relative_path '../scenes/xyhead_demo.yaml'

            drive: 
                perception:
                    state_estimation : OmniscientStateEstimator
                    agent_detection : 
                        type: cone_detection.ConeDetector3D
                        args:
                            camera_name: front_right #[front, front_right]
                            camera_calib_file: ./GEMstack/knowledge/calibration/cameras.yaml

                            # optional overrides
                            enable_tracking: False
                            visualize_2d: False
                            use_cyl_roi: False
                            save_data: False
                            orientation: False
                            use_start_frame: False
                    # agent_detection : cone_detection_simple.ConeDetectorSimple3D
                    parking_detection: parking_detection.ParkingSpotsDetector3D
                planning:
                    parking_component:
                        type: ParkingSim
                    # route_planning_component:
                    #     type: RoutePlanningComponent
                    
    sim: # full pipeline
        run:
            mode: simulation
            vehicle_interface:
                type: gem_simulator.GEMDoubleIntegratorSimulationInterface
                args:
                    scene: !relative_path '../scenes/parking_demo.yaml'
            # visualization: !include "klampt_visualization.yaml"

            drive: 
                perception:
                    state_estimation : OmniscientStateEstimator
                    agent_detection : 
                        type: cone_detection.ConeDetector3D
                        args:
                            camera_name: front_right #[front, front_right]
                            camera_calib_file: ./GEMstack/knowledge/calibration/cameras.yaml

                            # optional overrides
                            enable_tracking: False
                            visualize_2d: False
                            use_cyl_roi: False
                            save_data: False
                            orientation: False
                            use_start_frame: False
                    # agent_detection : cone_detection_simple.ConeDetectorSimple3D
                    parking_detection: parking_detection.ParkingSpotsDetector3D
                    perception_normalization : StandardPerceptionNormalizer
                    
                planning:
                    parking_component:
                        type: ParkingSim
                    route_planning_component:
                        type: RoutePlanningComponent
                        
                trajectory_tracking:
                    type: pure_pursuit.PurePursuitTrajectoryTracker
                    print: True

    fake_sim: # full pipeline w/ fake perception
        run:
            mode: simulation
            vehicle_interface:
                type: gem_simulator.GEMDoubleIntegratorSimulationInterface
                args:
                    scene: !relative_path '../scenes/parking_demo.yaml'
            visualization: !include "klampt_visualization.yaml"

            drive: 
                perception:
                    state_estimation : OmniscientStateEstimator
                    agent_detection : OmniscientAgentDetector
                        
                    
                planning:
                    parking_component:
                        type: ParkingSim
                    route_planning_component:
                        type: RoutePlanningComponent
                    # route_planning:
                    #     type: StaticRoutePlanner
                    #     args: [!relative_path '../GEMstack/knowledge/routes/forward_15m.csv'] #forward_15m
                    motion_planning: longitudinal_planning.YieldTrajectoryPlanner
                    trajectory_tracking:
                        type: pure_pursuit.PurePursuitTrajectoryTracker
                        print: True
    log_ros:
        log:
            ros_topics : !include "../GEMstack/knowledge/defaults/standard_ros_topics.yaml"