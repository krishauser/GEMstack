description: "Pedestrian detection, 3D position and velocity estimation, and pedestrian avoidance planning"
mode: hardware
vehicle_interface: gem_hardware.GEMHardwareInterface
mission_execution: StandardExecutor

# Recovery behavior after a component failure
recovery: 
    planning: 
        trajectory_tracking:
            type: recovery.StopTrajectoryTracker
            print: False

# Driving behavior for the GEM vehicle.  Runs real pedestrian perception, yield planner, and pure pursuit
drive: 
    perception:
        state_estimation : GNSSStateEstimator
        agent_detection : pedestrian_detection.PedestrianDetector
        perception_normalization : StandardPerceptionNormalizer
    planning:
        route_planning:
            type: StaticRoutePlanner
            args: [!relative_path '../GEMstack/knowledge/routes/forward_15m.csv','start']
        motion_planning: pedestrian_avoidance_planning.PedestrianAvoidanceMotionPlanner
        trajectory_tracking:
            type: pure_pursuit.PurePursuitTrajectoryTracker
            print: True


log:
    # Specify the top-level folder to save the log files.  Default is 'logs'
    #folder : 'logs' 
    # If prefix is specified, then the log folder will be named with the prefix followed by the date and time. Default no prefix
    prefix : 'hw3_'  
    # If suffix is specified, then logs will output to folder/prefix+suffix. Default uses date and time as the suffix
    #suffix : 'test3'  
    # Specify which ros topics to record to vehicle.bag. Default records nothing. This records the "standard" ROS topics.
    ros_topics : 
    # Specify options to pass to rosbag record. Default is no options.
    #rosbag_options : '--split --size=1024' 
    # If True, then record all readings / commands of the vehicle interface. Default False
    vehicle_interface : True
    # Specify which components to record to behavior.json. Default records nothing
    components : ['state_estimation','agent_detection','motion_planning']
    # Specify which components of state to record to state.json. Default records nothing 
    #state: ['all']
    # Specify the rate in Hz at which to record state to state.json. Default records at the pipeline's rate
    #state_rate: 10
replay:  # Add items here to set certain topics / inputs to be replayed from logs
    # Specify which log folder to replay from
    log: 
    ros_topics : []
    components : []

#usually can keep this constant
computation_graph: !include "../GEMstack/knowledge/defaults/computation_graph.yaml"

after:
    show_log_folder: False  #set to false to avoid showing the log folder

variants:
    detector_only:
        run:
            description: "Run the pedestrian detection code and show a visualization"
            visualization: !include "klampt_visualization.yaml"
            drive:
                planning:
                    trajectory_tracking:
    sim:
        run:
            description: "Run the yielding trajectory planner in simulation with omniscient perception"
            mode: simulation
            vehicle_interface:
                type: gem_simulator.GEMDoubleIntegratorSimulationInterface
                args:
                    scene: !relative_path '../scenes/xyhead_demo.yaml'
            visualization: !include "klampt_visualization.yaml"
            recovery:
                perception:
                    state_estimation : OmniscientStateEstimator
                    agent_detection : OmniscientAgentDetector
                    perception_normalization : StandardPerceptionNormalizer
            drive: 
                perception:
                    state_estimation : OmniscientStateEstimator
                    agent_detection : OmniscientAgentDetector
                    perception_normalization : StandardPerceptionNormalizer
