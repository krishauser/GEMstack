From c7246ed4ace2f27eef010df7d942c0852aca36f6 Mon Sep 17 00:00:00 2001
From: lukasdumasius <lukasdumasius@gmail.com>
Date: Mon, 17 Feb 2025 09:54:18 -0600
Subject: [PATCH 038/150] pedestrian_detection.py add time for velocity

---
 GEMstack/onboard/perception/fusion.py               | 2 +-
 GEMstack/onboard/perception/pedestrian_detection.py | 7 ++++++-
 2 files changed, 7 insertions(+), 2 deletions(-)

diff --git a/GEMstack/onboard/perception/fusion.py b/GEMstack/onboard/perception/fusion.py
index 7d655843..b642a062 100644
--- a/GEMstack/onboard/perception/fusion.py
+++ b/GEMstack/onboard/perception/fusion.py
@@ -42,7 +42,7 @@ from sensor_msgs.msg import Image, PointCloud2
 # GEMStack
 from ...state import AllState,VehicleState,ObjectPose,ObjectFrameEnum,AgentState,AgentEnum,AgentActivityEnum
 from ultralytics import YOLO
-from .fusion_utils import *
+from .pedestrian_detection_utils import *
 
 class Fusion3D():
     # TODO: Pull params into a JSON/yaml
diff --git a/GEMstack/onboard/perception/pedestrian_detection.py b/GEMstack/onboard/perception/pedestrian_detection.py
index dd67ed06..1f8cfe5b 100644
--- a/GEMstack/onboard/perception/pedestrian_detection.py
+++ b/GEMstack/onboard/perception/pedestrian_detection.py
@@ -77,12 +77,16 @@ class PedestrianDetector2D(Component):
         # track_id: AgentState
         self.prev_agents = dict()         
         self.current_agents = dict()
+        # TODO Implement time
+        self.prev_time = 0
+        self.curr_time = 1 # Avoid divide by 0 for placebolder, 0
         self.confidence = 0.7
         self.classes_to_detect = 0
         self.ground_threshold = 1.6
         self.max_dist_percent = 0.7
 
         # Load calibration data
+        # TODO: Maybe lets add one word or link what R t K are?
         self.R = load_extrinsics(os.getcwd() + '/GEMstack/onboard/perception/calibration/extrinsics/R.npy')
         self.t = load_extrinsics(os.getcwd() + '/GEMstack/onboard/perception/calibration/extrinsics/t.npy')
         self.K = load_intrinsics(os.getcwd() + '/GEMstack/onboard/perception/calibration/camera_intrinsics.json')
@@ -128,6 +132,7 @@ class PedestrianDetector2D(Component):
     # TODO: Moving Average across last N iterations pos/vel? Less spurious vals
     # TODO Akul: Fix velocity calculation to calculate in ObjectFrameEnum.START
     #            Work towards own tracking class instead of simple YOLO track?
+    #            Fix division by time
     # ret: Dict[track_id: vel[x, y, z]]
     def find_vels(self, track_ids: List[int], obj_centers: List[np.ndarray]) -> Dict[int, np.ndarray]:
         # Object not seen -> velocity = None
@@ -142,7 +147,7 @@ class PedestrianDetector2D(Component):
                 # print("shape 2: ", np.array([prev_agent.pose.x, prev_agent.pose.y, prev_agent.pose.z]))
                 # prev can be 3 separate Nones, current is just empty array... make this symmetrical
                 if prev_agent.pose.x and prev_agent.pose.y and prev_agent.pose.z and track_id_center_map[prev_agent.track_id].shape == 3:
-                    vels[prev_track_id] = track_id_center_map[prev_track_id] - np.array([prev_agent.pose.x, prev_agent.pose.y, prev_agent.pose.z])
+                    vels[prev_track_id] = (track_id_center_map[prev_track_id] - np.array([prev_agent.pose.x, prev_agent.pose.y, prev_agent.pose.z])) / (self.curr_time - self.prev_time)
         return vels
 
 
-- 
2.38.1

