From c23b36c5704713e0edc8b372c0ec58a9d816080b Mon Sep 17 00:00:00 2001
From: KenC1014 <kenken4016@gmail.com>
Date: Sat, 15 Feb 2025 02:28:39 -0600
Subject: [PATCH 029/150] rename variables

---
 GEMstack/onboard/perception/fusion.py | 20 +++++++++-----------
 1 file changed, 9 insertions(+), 11 deletions(-)

diff --git a/GEMstack/onboard/perception/fusion.py b/GEMstack/onboard/perception/fusion.py
index a7cd2171..0ac34638 100644
--- a/GEMstack/onboard/perception/fusion.py
+++ b/GEMstack/onboard/perception/fusion.py
@@ -61,10 +61,9 @@ class Fusion3D():
         boxes = track_result[0].boxes
 
         # Unpacking box dimentions detected into x,y,w,h
-        extracted_2d_pedestrians_pts = []
-        extracted_3d_pedestrians_pts = []
-        flattened_extracted_2d_pedestrians_pts = []
-        flattened_extracted_3d_pedestrians_pts = []
+        pedestrians_3d_pts = []
+        flattened_pedestrians_2d_pts = []
+        flattened_pedestrians_3d_pts = []
 
         for box in boxes:
             xywh = box.xywh[0].tolist()
@@ -86,24 +85,23 @@ class Fusion3D():
                                     ]
                 
                 extracted_2d_pts = list(np.array(extracted_pts)[:, :2].astype(int))
-                extracted_2d_pedestrians_pts.append(extracted_2d_pts)
-                flattened_extracted_2d_pedestrians_pts = flattened_extracted_2d_pedestrians_pts + extracted_2d_pts
+                flattened_pedestrians_2d_pts = flattened_pedestrians_2d_pts + extracted_2d_pts
                
                 extracted_3d_pts = list(np.array(extracted_pts)[:, -3:])
-                extracted_3d_pedestrians_pts.append(extracted_3d_pts)
-                flattened_extracted_3d_pedestrians_pts = flattened_extracted_3d_pedestrians_pts + extracted_3d_pts
+                pedestrians_3d_pts.append(extracted_3d_pts)
+                flattened_pedestrians_3d_pts = flattened_pedestrians_3d_pts + extracted_3d_pts
 
             # Used for visualization
             if(self.visualization):
                 cv_image = vis_2d_bbox(cv_image, xywh, box)
         
-        if len(extracted_2d_pedestrians_pts) > 0:
+        if len(pedestrians_3d_pts) > 0:
             # Draw projected 2D LiDAR points on the image.
-            for pt in flattened_extracted_2d_pedestrians_pts:
+            for pt in flattened_pedestrians_2d_pts:
                 cv2.circle(cv_image, pt, 2, (0, 0, 255), -1)
 
             # Create point cloud from extracted 3D points
-            ros_extracted_pedestrian_pc2 = create_point_cloud(flattened_extracted_3d_pedestrians_pts)
+            ros_extracted_pedestrian_pc2 = create_point_cloud(flattened_pedestrians_3d_pts)
             self.pub_pedestrians_pc2.publish(ros_extracted_pedestrian_pc2)
 
         
-- 
2.38.1

